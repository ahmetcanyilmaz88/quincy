name: CI

on:
  push:
    branches: ['main']
  pull_request:
  release:
    types: [prereleased]

jobs:
  # test:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       rust: [stable, nightly]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Checkout repository
  #     - uses: actions-rs/toolchain@v1
  #       name: Set up toolchain
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #     - uses: Swatinem/rust-cache@v2
  #       name: Cache toolchain and dependencies
  #     - uses: actions-rs/cargo@v1
  #       name: Build crate
  #       with:
  #         command: build
  #         args: --all-targets
  #     - uses: actions-rs/cargo@v1
  #       name: Test crate
  #       with:
  #         command: test

  # lint:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       rust: [stable, nightly]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Checkout repository
  #     - uses: actions-rs/toolchain@v1
  #       name: Set up toolchain
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #         components: rustfmt, clippy
  #     - uses: Swatinem/rust-cache@v2
  #       name: Cache toolchain and dependencies
  #     - uses: actions-rs/cargo@v1
  #       name: Check code with cargo fmt
  #       with:
  #         command: fmt
  #         args: --all -- --check
  #     - uses: actions-rs/cargo@v1
  #       name: Check code with cargo clippy
  #       with:
  #         command: clippy
  #         args: --all-targets -- -D warnings
 
  release: 
    runs-on: ubuntu-latest
    steps: #line 69
    - name: Debug print github
      run: echo "${{ toJson(github) }}"    
    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: $GITHUB_REF_NAME
        release_name: Release $GITHUB_REF_NAME
        draft: false
        prerelease: false 
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - uses: actions/checkout@v2
      name: Checkout repository

    - uses: actions-rs/toolchain@v1
      name: Set up toolchain
      with:
        profile: minimal
        toolchain: stable
        override: true

    - uses: Swatinem/rust-cache@v2
      name: Cache toolchain and dependencies

    - name: Build release binary
      run: cargo build --release

    - name: Upload quincy-client binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/quincy-client
        asset_name: quincy-client
        asset_content_type: application/octet-stream

    - name: Upload quincy-server binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/quincy-server
        asset_name: quincy-server
        asset_content_type: application/octet-stream

    - name: Upload quincy-users binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/quincy-users
        asset_name: quincy-users
        asset_content_type: application/octet-stream

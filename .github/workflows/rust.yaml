name: CI

on:
  push:
    branches: ['main']
    tags:
      - 'v*'
  pull_request:

jobs:
  # test:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       rust: [stable, nightly]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Checkout repository
  #     - uses: actions-rs/toolchain@v1
  #       name: Set up toolchain
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #     - uses: Swatinem/rust-cache@v2
  #       name: Cache toolchain and dependencies
  #     - uses: actions-rs/cargo@v1
  #       name: Build crate
  #       with:
  #         command: build
  #         args: --all-targets
  #     - uses: actions-rs/cargo@v1
  #       name: Test crate
  #       with:
  #         command: test

  # lint:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       rust: [stable, nightly]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Checkout repository
  #     - uses: actions-rs/toolchain@v1
  #       name: Set up toolchain
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.rust }}
  #         override: true
  #         components: rustfmt, clippy
  #     - uses: Swatinem/rust-cache@v2
  #       name: Cache toolchain and dependencies
  #     - uses: actions-rs/cargo@v1
  #       name: Check code with cargo fmt
  #       with:
  #         command: fmt
  #         args: --all -- --check
  #     - uses: actions-rs/cargo@v1
  #       name: Check code with cargo clippy
  #       with:
  #         command: clippy
  #         args: --all-targets -- -D warnings
 

  linux-x86_64:
    name: Linux x86_64
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository
      - uses: awalsh128/cache-apt-pkgs-action@v1
        name: apt musl-tools
        with:
          packages: musl-tools # provides musl-gcc
          version: 1.0        
      - uses: actions-rs/toolchain@v1
        name: Set up toolchain
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - uses: Swatinem/rust-cache@v2
        name: Cache toolchain and dependencies
      - uses: actions/checkout@v2
      - name: Build-musl
        uses: gmiam/rust-musl-action@master
        with:
          args: cargo build --target x86_64-unknown-linux-musl --release
      - uses: actions/upload-artifact@v2
        with:
          name: quincy
          path: |
            target/x86_64-unknown-linux-musl/release/quincy-client
            target/x86_64-unknown-linux-musl/release/quincy-server
            target/x86_64-unknown-linux-musl/release/quincy-users
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
      # - name: Prepare binaries
      #   run: |
      #     mkdir -p quincy-linux-binaries/x86_64-unknown-linux-musl
      #     mv target/x86_64-unknown-linux-musl/release/quincy-client quincy-linux-binaries/x86_64-unknown-linux-musl/
      #     mv target/x86_64-unknown-linux-musl/release/quincy-server quincy-linux-binaries/x86_64-unknown-linux-musl/
      #     mv target/x86_64-unknown-linux-musl/release/quincy-users quincy-linux-binaries/x86_64-unknown-linux-musl/
      #     tar zcf quincy-linux-x86_64.tar.gz -C quincy-linux-binaries/x86_64-unknown-linux-musl .
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: quincy-linux-x86_64.tar.gz
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
